/*
 ***********************************************************
 * DO NOT EDIT THIS FILE UNLESS IT IS ABSOLUTELY NECESSARY *
 ***********************************************************
 */

 // As of May 18 2025, the _RequestVerificationToken is now randomly generated and is not static anymore.

const axios = require("axios");
const { pageToHTML } = require("./htmlProcessor");
async function makeGetRequest(token, type = "text") {
  /**
   * Make a get request to the student result page
   * @param {string} token - The token of the student
   * @param {string} type - The type of response to return. Default is text
   */
  try {
    const url = `https://www.scialex.org/F/${token}/2018/Student/Results.aspx`;

    const response = await axios({
      method: "get",
      url: url,
      headers: {
        Cookie:
          "__RequestVerificationToken=T11HaxdI7gYMtXLATw_X0khHCb12SVwGKPOMcZtNW5SVYJyDTRpwMCMUfaQ0rUov71H7O5j8Ys70gCxvObCrASO9i5Ei_F1NcnuTgaGddvE1; ASP.NET_SessionId=ze0v2j0qmbp0ft2vseubruat; cf_clearance=d3bOYzRQwuojNlBhMLDvkYh7sOQLD0SXqpeaJhYa26o-1737452615-1.2.1.1-hOOZpIeAPQ9mt9y36Tyg7hxRWYNM.1MSEKlkssx0meEbLkXH3BQnt3IfxUzXfNd31auAuVWUqYj.aN5gIa7Ba1aplXW6TWDjV2i6srKQq7KKXn2mhJQUKlUUCyfszEJGHDUhm0tkhBAleGbwyc02VWeYIDzr9xx_QNTU_0o5PFw.rnsCXO7kPyoNLkISrj7nAuBUpEIW9wHsokRlMDEyY1Z1nIbBIrnT70_8WlTW2NE61Azga2IHLIFri.rDieLwQDML3MK6qtlk3gJvhvrVgiOatOqq__V.kRz3ZSSi9gw",
        Accept:
          "text,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8",
        "Accept-Encoding": "gzip, deflate, br",
        "Accept-Language": "en-US,en;q=0.9",
        "Cache-Control": "no-cache",
        Connection: "keep-alive",
        Host: "www.scialex.org",
        "User-Agent":
          "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36",
      },
      responseType: "text",
      maxRedirects: 5,
      validateStatus: function (status) {
        return status >= 200 && status < 500;
      },
    });

    if (response.status === 200) {
      if (!response.data) throw new Error("Response is empty");
      const html = response.data;
      return type === "html" ? await pageToHTML(html) : html;
    } else
      throw new Error(`Request failed with status code: ${response.status}.`);
  } catch (error) {
    console.error(`Failed to make get request:`, error);
    throw error;
  }
}

module.exports = {
  makeGetRequest,
};
